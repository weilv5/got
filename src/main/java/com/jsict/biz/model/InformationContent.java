package com.jsict.biz.model;

import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.jsict.framework.core.dao.annotation.LogicDel;
import com.jsict.framework.core.dao.annotation.Monitor;
import com.jsict.framework.core.dao.annotation.MonitorType;
import com.jsict.framework.core.dao.hibernate.EntityOperationListener;
import com.jsict.framework.core.model.BaseEntity;
import java.util.Date;
import javax.persistence.*;
import javax.validation.constraints.NotNull;

import com.jsict.framework.core.dao.annotation.Dictionary;
import com.jsict.framework.core.sensitive.annotation.SensitiveWordsReplace;
import com.jsict.framework.utils.JsonDateDeSerializer;
import com.jsict.framework.utils.JsonDateSerializer;
import org.hibernate.validator.constraints.NotBlank;

/**
 * Auto-Generated by UDP Generator
 */
@Entity
@LogicDel
@Table(name = "information_content")
@EntityListeners(EntityOperationListener.class)
@Monitor(name = "信息", types = {MonitorType.CREATE, MonitorType.UPDATE, MonitorType.DELETE})
public class InformationContent extends BaseEntity<String> {

    /** 作者 */
    @Column(name = "author", length = 32, nullable = false)
    private String author;
    /** 发布日期 */
    @NotNull(message = "发布日期不能为空")
    @JsonSerialize(using = JsonDateSerializer.class)
    @JsonDeserialize(using = JsonDateDeSerializer.class)
    @Column(name = "released_date", length = 30, nullable = false)
    private Date releasedDate;
    /** 标题 */
    @NotBlank(message="主题不能为空")
    @Column(name = "title", length = 300, nullable = false)
    @SensitiveWordsReplace
    private String title;
    /** 内容 */
    @NotBlank(message="内容不能为空")
    @Column(name = "content", length = 300, nullable = false)
    @SensitiveWordsReplace
    private String content;
    /** 信息类别 */
    @NotBlank(message="信息类别不能为空")
    @Dictionary(dictField = "info_type")
    @Column(name = "info_type", length = 30, nullable = false)
    private String infoType;
    /** 附件 */
    @Column(name = "attachment", length = 100)
    private String attachment;
    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "author", insertable = false, updatable = false)
    private User user;

    @Transient
    private String name;

    public InformationContent(){
        // Defult Constructor
    }

    public InformationContent(String id, String author, Date releasedDate, String title, String infoType, String name) {
        this.id = id;
        this.author = author;
        this.releasedDate = releasedDate;
        this.title = title;
        this.infoType = infoType;
        this.name = name;
    }

    public void setAuthor(String author){
        this.author = author;
    }

    public String getAuthor(){
        return this.author;
    }
    public void setReleasedDate(Date releasedDate){
        this.releasedDate = releasedDate;
    }

    public Date getReleasedDate(){
        return this.releasedDate;
    }
    public void setTitle(String title){
        this.title = title;
    }

    public String getTitle(){
        return this.title;
    }
    public void setContent(String content){
        this.content = content;
    }

    public String getContent(){
        return this.content;
    }
    public void setInfoType(String infoType){
        this.infoType = infoType;
    }

    public String getInfoType(){
        return this.infoType;
    }

    public User getUser() {
        return user;
    }

    public void setUser(User user) {
        this.user = user;
    }

    public String getAttachment() {
        return attachment;
    }

    public void setAttachment(String attachment) {
        this.attachment = attachment;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }
}