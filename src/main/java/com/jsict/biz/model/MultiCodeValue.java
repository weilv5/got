package com.jsict.biz.model;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.jsict.framework.core.model.BaseEntity;
import com.jsict.framework.core.dao.annotation.LogicDel;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

import javax.persistence.*;
import java.util.ArrayList;
import java.util.List;


/**
 * Auto-Generated by UDP Generator
 */
@LogicDel
@Entity
@Table(name = "multiCode_value")
public class MultiCodeValue extends BaseEntity<String> {

    /** child_num */
    @Column(name = "child_num", length = 10)
    private Integer childNum;
    /** 代码ID */
    @Column(name = "code_id", length = 50, nullable = false)
    private String codeId;
    /** 代码项值 */
    @Column(name = "item_value", length = 20, nullable = false)
    private String itemValue;
    /** 代码项显示值 */
    @Column(name = "code_name", length = 100, nullable = false)
    private String codeName;
    /** 上层代码id */
    @Column(name = "parent_item_id", length = 200)
    private String parentItemId;

    /** 代码编号 */
    @Column(name = "item_code", length = 100, nullable = false)
    private String itemCode;
    /** 排序 */
    @Column(name = "sort_sq", length = 10, nullable = false)
    private Integer sortSq;
    /** 评论 */
    @Column(name = "comments", length = 200)
    private String comments;

    @JsonIgnore
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "parent_item_id", insertable = false, updatable = false)
    private MultiCodeValue parentDict;

    @JsonIgnore
    @OneToMany(fetch=FetchType.EAGER)
    @Fetch(FetchMode.SELECT)
    @JoinColumn(name = "parent_item_id")
    private List<MultiCodeValue> childList = new ArrayList<MultiCodeValue>();

    public MultiCodeValue getParentDict() {
        return parentDict;
    }

    public void setParentDict(MultiCodeValue parentDict) {
        this.parentDict = parentDict;
    }

    public List<MultiCodeValue> getChildList() {
        return childList;
    }

    public void setChildList(List<MultiCodeValue> childList) {
        this.childList = childList;
    }

    public void setChildNum(Integer childNum){
        this.childNum = childNum;
    }

    public Integer getChildNum(){
        return this.childNum;
    }
    public void setCodeId(String codeId){
        this.codeId = codeId;
    }

    public String getCodeId(){
        return this.codeId;
    }
    public void setItemValue(String itemValue){
        this.itemValue = itemValue;
    }

    public String getItemValue(){
        return this.itemValue;
    }

    public String getCodeName() {
        return codeName;
    }

    public void setCodeName(String codeName) {
        this.codeName = codeName;
    }

    public void setParentItemId(String parentItemId){
        this.parentItemId = parentItemId;
    }

    public String getParentItemId(){
        return this.parentItemId;
    }
    public void setItemCode(String itemCode){
        this.itemCode = itemCode;
    }

    public String getItemCode(){
        return this.itemCode;
    }
    public void setSortSq(Integer sortSq){
        this.sortSq = sortSq;
    }

    public Integer getSortSq(){
        return this.sortSq;
    }
    public void setComments(String comments){
        this.comments = comments;
    }

    public String getComments(){
        return this.comments;
    }
}