package com.jsict.biz.model;

import com.jsict.framework.core.dao.annotation.LogicDel;
import com.jsict.framework.core.dao.annotation.Monitor;
import com.jsict.framework.core.dao.annotation.MonitorType;
import com.jsict.framework.core.dao.hibernate.EntityOperationListener;
import com.jsict.framework.core.model.BaseEntity;
import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.hibernate.validator.constraints.NotBlank;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EntityListeners;
import javax.persistence.Table;


/**
 * Auto-Generated by UDP Generator
 */
@Entity
@LogicDel
@Table(name = "data_dictionary")
@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
@EntityListeners(EntityOperationListener.class)
@Monitor(name = "数据字典", types = {MonitorType.CREATE, MonitorType.UPDATE, MonitorType.DELETE})
public class DataDictionary extends BaseEntity<String> {

    /** dictionary_code */
    @NotBlank(message="字典分类不能为空")
    @Column(name = "dictionary_code", length = 30, nullable = false)
    private String dictionaryCode;
    /** content */
    @Column(name = "content", length = 2000, nullable = false)
    private String content;

    public void setDictionaryCode(String dictionaryCode){
        this.dictionaryCode = dictionaryCode;
    }

    public String getDictionaryCode(){
        return this.dictionaryCode;
    }
    public void setContent(String content){
        this.content = content;
    }

    public String getContent(){
        return this.content;
    }
}