package com.jsict.biz.model;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.jsict.framework.core.dao.annotation.LogicDel;
import com.jsict.framework.core.dao.annotation.Monitor;
import com.jsict.framework.core.dao.annotation.MonitorType;
import com.jsict.framework.core.dao.hibernate.EntityOperationListener;
import com.jsict.framework.core.model.BaseEntity;
import org.hibernate.validator.constraints.NotBlank;

import javax.persistence.*;
import javax.validation.constraints.Max;
import java.util.*;


/**
 * Auto-Generated by UDP Generator
 */
@Entity
@LogicDel
@Table(name = "module")
@EntityListeners(EntityOperationListener.class)
@Monitor(name = "模块", types = {MonitorType.CREATE, MonitorType.UPDATE, MonitorType.DELETE})
public class Module extends BaseEntity<String> {

    /** 模块地址 */
    @Column(name = "module_addr", length = 200)
    private String moduleAddr;

    /** 模块序号 */
    @Max(value = 99, message = "排序必须小于99")
    @Column(name = "sort_sq", length = 10)
    private Integer sortSq;

    /** 是否可见 */
    @Column(name = "is_visible", length = 10)
    private Integer isVisible;
    /** 父模块ID */
    @Column(name = "parent_module_id", length = 32)
    private String parentModuleId;
    /** 是否公开 */
    @Column(name = "is_public", length = 10)
    private Integer isPublic;

    /** 目标 */
    @Column(name = "target", length = 100)
    private String target;
    /** 模块code */
    @Column(name = "module_code", length = 100, nullable = false)
    private String moduleCode;
    /** 模块名称 */
    @NotBlank(message="模块名称不能为空")
    @Column(name = "module_name", length = 100, nullable = false)
    private String moduleName;
    /** 小图标地址 */
    @Column(name = "icon_addr", length = 100)
    private String iconAddr;
    /** 权限判断是否严格过滤URL */
    @Column(name = "stick", length = 1)
    private Integer stick;

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "parent_module_id", insertable = false, updatable = false)
    private Module parentModule;

    /** 模块所有角色 */
    @ManyToMany(fetch = FetchType.EAGER)
    @JoinTable(name = "module_in_role",
            joinColumns = {
                    @JoinColumn(name = "module_id", insertable = false, updatable = false)
            },
            inverseJoinColumns = {
                    @JoinColumn(name = "role_id", insertable = false, updatable = false)
            }
    )
    private List<Role> roleList = new ArrayList<>();



    /** 是否含有子模块 */
    @Column(name = "has_child", length = 10)
    private Integer hasChild;

    /** 模块所有子模块 */
    @JsonIgnore
    @OneToMany(cascade = { CascadeType.REFRESH, CascadeType.PERSIST,CascadeType.MERGE, CascadeType.REMOVE },fetch=FetchType.EAGER)
    @JoinColumn(name = "parent_module_id", insertable = false, updatable = false)
    private List<Module> childList = new ArrayList<Module>();

    public Module(){
        //Default Constructor
    }

    public Module(String id, String moduleAddr, Integer isVisible, Integer isPublic, String target, String moduleCode, String moduleName, String iconAddr,Integer hasChild) {
        this.moduleAddr = moduleAddr;
        this.isVisible = isVisible;
        this.isPublic = isPublic;
        this.target = target;
        this.moduleCode = moduleCode;
        this.moduleName = moduleName;
        this.iconAddr = iconAddr;
        this.id = id;
        this.hasChild=hasChild;
    }

    public void setModuleAddr(String moduleAddr){
        this.moduleAddr = moduleAddr;
    }

    public String getModuleAddr(){
        return this.moduleAddr;
    }

    public void setSortSq(Integer sortSq){
        this.sortSq = sortSq;
    }

    public Integer getSortSq(){
        return this.sortSq;
    }

    public void setIsVisible(Integer isVisible){
        this.isVisible = isVisible;
    }

    public Integer getIsVisible(){
        return this.isVisible;
    }

    public String getParentModuleId() {
        return parentModuleId;
    }

    public void setParentModuleId(String parentModuleId) {
        this.parentModuleId = parentModuleId;
    }

    public void setIsPublic(Integer isPublic){
        this.isPublic = isPublic;
    }

    public Integer getIsPublic(){
        return this.isPublic;
    }

    public void setTarget(String target){
        this.target = target;
    }

    public String getTarget(){
        return this.target;
    }

    public void setModuleCode(String moduleCode){
        this.moduleCode = moduleCode;
    }

    public String getModuleCode(){
        return this.moduleCode;
    }
    public void setModuleName(String moduleName){
        this.moduleName = moduleName;
    }

    public String getModuleName(){
        return this.moduleName;
    }
    public void setIconAddr(String iconAddr){
        this.iconAddr = iconAddr;
    }

    public String getIconAddr(){
        return this.iconAddr;
    }

    public Module getParentModule() {
        return parentModule;
    }

    public void setParentModule(Module parentModule) {
        this.parentModule = parentModule;
    }

    public List<Role> getRoleList() {
        return roleList;
    }

    public void setRoleList(List<Role> roleList) {
        this.roleList = roleList;
    }

    public Integer getStick() {
        return stick;
    }

    public void setStick(Integer stick) {
        this.stick = stick;
    }

    public Integer getHasChild() {
        return hasChild;
    }

    public void setHasChild(Integer hasChild) {
        this.hasChild = hasChild;
    }
    public List<Module> getChildList() {
        return childList;
    }

    public void setChildList(List<Module> childList) {
        this.childList = childList;
    }

    @Override
    public boolean equals(Object obj){
        if(obj instanceof Module){
            Module module = (Module)obj;
            if(id != null)
                return getId().equals(module.getId());
            else
                return super.equals(obj);
        }else
            return false;
    }

    @Override
    public int hashCode() {

        return Objects.hash(moduleAddr, sortSq, isVisible, parentModuleId, isPublic, target, moduleCode, moduleName, iconAddr, stick, parentModule, roleList);
    }
}