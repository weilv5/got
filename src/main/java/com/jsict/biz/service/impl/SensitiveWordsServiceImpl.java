package com.jsict.biz.service.impl;

import com.jsict.framework.core.service.impl.GeneriServiceImpl;
import com.jsict.biz.model.SensitiveWords;
import com.jsict.biz.service.SensitiveWordsService;

import org.springframework.cache.annotation.CacheEvict;
import org.springframework.cache.annotation.Cacheable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.util.List;

/**
 * Auto-Generated by UDP Generator
 */
@Service
public class SensitiveWordsServiceImpl extends GeneriServiceImpl<SensitiveWords, String> implements SensitiveWordsService {

    @Override
    @Cacheable(value = "sensitiveWordsCache")
    public List<SensitiveWords> loadAllWords() {
        return super.genericDao.findAll();
    }

    @Override
    @Transactional
    @CacheEvict(value = "sensitiveWordsCache",allEntries=true)
    public SensitiveWords save(SensitiveWords entity) {
        return super.save(entity);
    }

    @Override
    @Transactional
    @CacheEvict(value = "sensitiveWordsCache",allEntries=true)
    public SensitiveWords update(SensitiveWords entity) {
        return super.update(entity);
    }

    @Override
    @Transactional
    @CacheEvict(value = "sensitiveWordsCache",allEntries=true)
    public SensitiveWords saveOrUpdate(SensitiveWords entity) {
        return super.saveOrUpdate(entity);
    }

    @Override
    @Transactional
    @CacheEvict(value = "sensitiveWordsCache",allEntries=true)
    public boolean delete(SensitiveWords entity) {
        return super.delete(entity);
    }

    @Override
    @Transactional
    @CacheEvict(value = "sensitiveWordsCache",allEntries=true)
    public boolean deleteById(String id) {
        return super.deleteById(id);
    }

}
