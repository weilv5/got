package com.jsict.biz.service.impl;

import com.jsict.biz.model.MultiCode;
import com.jsict.biz.service.MultiCodeService;
import com.jsict.framework.core.service.impl.GeneriServiceImpl;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Auto-Generated by UDP Generator
 */
@Service
public class MultiCodeServiceImpl extends GeneriServiceImpl<MultiCode, String> implements MultiCodeService {

    @Transactional(readOnly = true)
    @Override
    public List<MultiCode> findAll() {
        Map<String, Object> params = new HashMap<>();
        params.put("delFlag", 0);
        return genericDao.findByProperty(params);
    }

    @Transactional
    @Override
    public List<MultiCode> findId(String name) {
        Map<String, Object> params = new HashMap<>();
        params.put("codeName", name);
        return genericDao.findByProperty(params);


    }

    @Transactional
    @Override
    public boolean findValue(MultiCode multiCode) {
        boolean bool = false;
        Map<String, Object> params = new HashMap<>();
        params.put("codeName", multiCode.getCodeName());
        params.put("delFlag", 0);
        if (genericDao.findByProperty(params).isEmpty()) {
            bool = true;
        }
        return bool;
    }

    @Transactional
    @Override
    public boolean updateValue(MultiCode multiCode) {
        boolean bool = false;
        MultiCode multiCodeId=genericDao.getById(multiCode.getId());
        if(multiCodeId.getCodeName().equals(multiCode.getCodeName())){
            bool=true;
        }
        return bool;
    }
}
