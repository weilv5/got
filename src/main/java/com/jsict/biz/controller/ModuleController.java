package com.jsict.biz.controller;

import com.jsict.biz.model.Module;
import com.jsict.biz.model.ModuleQuery;
import com.jsict.biz.service.ModuleService;
import com.jsict.framework.core.controller.AbstractGenericController;
import com.jsict.framework.core.controller.CSRFTokenManager;
import com.jsict.framework.core.controller.Response;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.servlet.ModelAndView;

import javax.servlet.http.HttpServletRequest;
import java.util.List;


/**
 * Auto-Generated by UDP Generator
 */
@Controller
@RequestMapping("module")
public class ModuleController extends
    AbstractGenericController<Module, String,
            ModuleQuery> {
    private static final Logger logger = LoggerFactory.getLogger(ModuleController.class);

    private static final String EDIT = "edit";
    @Autowired
    private ModuleService moduleService;



    @RequestMapping(value = "moduleTree", method = RequestMethod.POST,  produces = "application/json")
    @ResponseBody
    public List<Module> moduleTree(HttpServletRequest request) {
        request.getSession().removeAttribute("moduleId");
        return moduleService.findAll();
    }

    @RequestMapping(value = "edit", method = RequestMethod.GET)
    public ModelAndView edit(HttpServletRequest request, @RequestParam String id, @RequestParam String parentModuleId) {
        String controllerMapping = this.getClass().getAnnotation(RequestMapping.class).value()[0];
        Module m = moduleService.get(id);
        Module p = moduleService.get(parentModuleId);
        ModelAndView mav = new ModelAndView(controllerMapping+ "/"+EDIT);
        mav.addObject("module", m);
        mav.addObject("parentModule", p);
        String csrfToken = CSRFTokenManager.getTokenForSession(request.getSession());
        mav.addObject("csrfToken", csrfToken);
        return mav;
    }

    /**
     * 根据主键删除实体对象
     *
     * @param id
     *            主键
     * @return 删除结果：成功返回：{'responseCode': 0}；<br>
     *         失败返回：{'responseCode': -1, 'msg': '详细的错误信息'}
     */
    @RequestMapping(value = "/delete/{id}", method = RequestMethod.POST, produces = "application/json")
    @ResponseBody
    public Response delete(@PathVariable String id) {
        Response response;
        try {
            Module m = moduleService.get(id);
            boolean isSuccess = moduleService.delete(m);
            if (isSuccess)
                response = new Response(SUCCESS);
            else
                response = new Response(ERROR, NO_ENTITY);
        } catch (Exception e) {
            logger.error(e.getLocalizedMessage(), e);
            response = new Response(ERROR, e.getLocalizedMessage());
        }
        return response;
    }


}