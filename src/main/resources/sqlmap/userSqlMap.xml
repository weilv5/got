<?xml version="1.0" encoding="UTF-8"?>
<dynamic-hibernate namespace="com.jsict.biz.model.User">
    <query name="selectByPage" qlType="JPQL">
        <![CDATA[
        select new User(t.id, t.email, t.name, t.gender, t.userId, t.mobile, t.enable) from User t Where t.delFlag = :delFlag
                #if($deptId && $deptId.length() > 0)
                AND (t.deptId = :deptId or :deptId in elements(t.deptList))
                #end

                #if($name && $name.length() > 0)
                AND t.name like concat('%', :name, '%')
                #end

                #if($userId && $userId.length() > 0)
                AND t.userId like concat('%', :userId, '%')
                #end

                #if($gender && $gender.length() > 0)
                AND t.gender = :gender
                #end

                #if($role && $role.id.length() > 0)
                AND  :role in elements(t.roleList)
                #end

                #if($enable)
                AND t.enable = :enable
                #else
                AND t.enable = 1
                #end

        ]]> order by t.sort asc
    </query>

    <query name="query_multi_table" qlType="SQL">
        <![CDATA[
        select u.id, u.name, u.birthday, ud.dept_id as deptId, d.dept_name as deptName from users u left join user_in_dept ud on u.id = ud.user_id
        left join department d on d.id = ud.dept_id where u.user_id = :name
	]]>
    </query>

    <query name="query_multi_table2" qlType="SQL">
        <![CDATA[
        select u.id, u.name, u.birthday, u.dept_id as deptId, d.dept_name as deptName from users u ,department d where d.id = u.dept_id and u.dept_id in ( :deptId)
	]]>
    </query>

    <query name="update_users_by_sql" qlType="SQL">
        <![CDATA[
        update users u set u.email= :email where u.id= :id
        ]]>
    </query>

    <query name="selectUserByRole" qlType="JPQL">
        <![CDATA[
        select t from User t Where t.delFlag = :delFlag
            #if($role && $role.id.length() > 0)
            AND  :role in elements(t.roleList)
            #end
        ]]> order by t.sort asc
    </query>

    <query name="sql_test" qlType="SQL">
        <![CDATA[
        select  created_date,password, updated_date, birthday, name, id, del_flag, creator_id, updater_id from test_user where name like :name
	]]>
    </query>
</dynamic-hibernate>